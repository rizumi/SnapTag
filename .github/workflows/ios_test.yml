name: iOS test workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-15
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Select Xcode version
        run: sudo xcode-select -s '/Applications/Xcode_16.2.app/Contents/Developer'
      - name: Build
        env:
          platform: ${{ 'iOS Simulator' }}
          device: ${{ 'iPhone 16' }}
        run: |
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build-for-testing -scheme "SnapTag" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
      - name: Test
        env:
          platform: ${{ 'iOS Simulator' }}
          device: ${{ 'iPhone 16' }}
        run: |
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild test-without-building -scheme "SnapTag" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
